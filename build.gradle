/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-gradle-plugin'
    id 'java'
    id 'maven-publish'
    id 'java-library'
}

repositories {
    mavenLocal()
    maven {
        url "https://repo.maven.apache.org/maven2/"
    }
}

dependencies {
    implementation 'org.hibernate.common:hibernate-commons-annotations:7.0.3.Final'
    implementation 'io.quarkus:quarkus-rest:3.17.3'
    implementation 'io.quarkus:quarkus-rest-jsonb:3.17.3'
    implementation 'io.quarkus:quarkus-smallrye-openapi:3.17.3'
    implementation 'io.quarkus:quarkus-smallrye-health:3.17.3'
    implementation 'io.quarkus:quarkus-smallrye-metrics:3.17.3'
    implementation 'io.quarkus:quarkus-smallrye-fault-tolerance:3.17.3'
    implementation 'io.quarkus:quarkus-smallrye-graphql:3.17.3'
    implementation 'io.quarkus:quarkus-hibernate-validator:3.17.3'
    implementation 'io.quarkus:quarkus-jdbc-postgresql:3.17.3'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache:3.17.3'
    implementation 'io.quarkus:quarkus-info:3.17.3'
    implementation 'io.quarkus:quarkus-websockets:3.17.3'
    implementation 'io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.22.0'
    implementation 'io.quarkus:quarkus-web-dependency-locator:3.17.3'
    runtimeOnly 'org.mvnpm.at.mvnpm:vaadin-webcomponents:24.3.11'
    testImplementation 'io.quarkus:quarkus-junit5:3.17.3'
    testImplementation 'io.rest-assured:rest-assured:5.5.0'
    api 'org.apache.httpcomponents:httpclient:4.5.7'
    implementation 'org.apache.commons:commons-lang3:3.5'
}

group = 'io.quarkus.sample'
version = '1.0-SNAPSHOT'
description = 'TODOS Application'
java.sourceCompatibility = JavaVersion.VERSION_17

/**
compileOptions {
    sourceCompatibility 17
    targetCompatibility 17
} **/
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test{
        useJUnitPlatform()
        ignoreFailures = true
        
}


tasks.named('jar') {
    
    manifest {
        attributes('SAMPLE': 'io.quarkus.sample')
    } 
    /**
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    } with jar
    **/
}

def dependsDir = "${buildDir}/libs/dependencies/"
    task copyDependencies(type: Copy) {
        from configurations.compile
        into "${dependsDir}"
    }
    task createJar(dependsOn: copyDependencies, type: Jar) {
      
        manifest {
            attributes('Main-Class': 'com.example.gradle.App',
                    'Class-Path': configurations.compile.collect { 'dependencies/' + it.getName() }.join(' ')
            )
        }
        with jar
    }

